{
    "case_name": "test_data",
    "run_time": "20230601 18:39:48",
    "test_type": "TestPage",
    "case_doc": null,
    "success": false,
    "failures": "Traceback (most recent call last):\n  File \"D:\\test\\venv\\lib\\site-packages\\minium\\framework\\libs\\unittest\\case.py\", line 41, in testPartExecutor\n    yield\n  File \"D:\\test\\venv\\lib\\site-packages\\minium\\framework\\libs\\unittest\\case.py\", line 127, in run\n    self._callTestMethod(testMethod)\nAssertionError: {'\u4e2a\u4eba\u9884\u7ea6\u53c2\u89c2'} != '\u4e2a\u4eba\u9884\u7ea6\u53c2\u89c2' : data equal\n",
    "errors": "",
    "start_timestamp": 1685616023.610798,
    "is_failure": true,
    "is_error": false,
    "module": "D:.test.test.first_test",
    "package": "test",
    "failed_line_num": -1,
    "device": {
        "system_info": {
            "model": "iPhone 5",
            "pixelRatio": 2,
            "windowWidth": 320,
            "windowHeight": 456,
            "system": "iOS 10.0.1",
            "language": "zh_CN",
            "version": "8.0.5",
            "deviceOrientation": "portrait",
            "screenWidth": 320,
            "screenHeight": 568,
            "SDKVersion": "2.30.2",
            "brand": "devtools",
            "fontSizeSetting": 16,
            "benchmarkLevel": 1,
            "batteryLevel": 100,
            "statusBarHeight": 20,
            "bluetoothEnabled": true,
            "locationEnabled": true,
            "wifiEnabled": true,
            "cameraAuthorized": true,
            "locationAuthorized": true,
            "microphoneAuthorized": true,
            "notificationAuthorized": true,
            "safeArea": {
                "top": 20,
                "left": 0,
                "right": 320,
                "bottom": 568,
                "width": 320,
                "height": 548
            },
            "platform": "devtools",
            "enableDebug": true,
            "devicePixelRatio": 2,
            "host": {
                "env": "WeChat"
            },
            "mode": "default"
        }
    },
    "log_filename": "run.log",
    "error_type": "AssertionError",
    "error_value": "{'\u4e2a\u4eba\u9884\u7ea6\u53c2\u89c2'} != '\u4e2a\u4eba\u9884\u7ea6\u53c2\u89c2' : data equal",
    "error_stages": [
        "testMethod"
    ],
    "screen_info": [
        {
            "name": "setup",
            "url": "/pages/main/main",
            "path": "images\\setup.png",
            "ts": 1685616023,
            "datetime": "2023-06-01 18:40:23"
        },
        {
            "name": "assertEqual-failed",
            "url": "/pages/main/main",
            "path": "images\\assertEqual-failed.png",
            "ts": 1685616025,
            "datetime": "2023-06-01 18:40:25"
        },
        {
            "name": "teardown",
            "url": "/pages/main/main",
            "path": "images\\teardown.png",
            "ts": 1685616025,
            "datetime": "2023-06-01 18:40:25"
        }
    ],
    "step_info": [],
    "check_list": [],
    "assert_list": [
        {
            "name": "assertEqual",
            "ret": false,
            "msg": "{'\u4e2a\u4eba\u9884\u7ea6\u53c2\u89c2'} != '\u4e2a\u4eba\u9884\u7ea6\u53c2\u89c2' : data equal",
            "img": "assertEqual-failed",
            "wxml": "01184025.wxml"
        }
    ],
    "perf_data": "{\"startup\": 0, \"avg_cpu\": 0, \"max_cpu\": 0, \"cpu_data_list\": [], \"avg_mem\": 0, \"max_mem\": 0, \"mem_data_list\": [], \"avg_fps\": 0, \"min_fps_rt\": 0, \"fps_data_list\": [], \"fps_time_series_list\": [], \"cpu_time_series_list\": [], \"mem_time_series_list\": []}",
    "weapp_log_path": "weapp.log",
    "request_log_path": "request.log",
    "stop_timestamp": 1685616025.7666404,
    "appId": "",
    "appName": "",
    "source": {
        "code": [
            "    def test_data(self):\n",
            "        page = self.app.redirect_to(\"/pages/main/main\")\n",
            "        # el = page.get_element(\".news-item > .new-source > .new-title > .question-link\").get_element(\"text\")  # text_name\n",
            "        # print(el.text)\n",
            "        # self.assertDictEqual({\n",
            "        #    \"\u5357\u65b9\u79d1\u6280\u5927\u5b66\u9884\u7ea6\u5c0f\u7a0b\u5e8f\u4e0a\u7ebf\"\n",
            "        # }, el.text, \"data equal\")\n",
            "        el = page.get_element(\".booking-text\")\n",
            "        print(el.text)\n",
            "        self.assertEqual({\n",
            "            \"\u4e2a\u4eba\u9884\u7ea6\u53c2\u89c2\"\n",
            "        }, el.text, \"data equal\")\n"
        ],
        "start": 10
    },
    "filename": "result.json"
}